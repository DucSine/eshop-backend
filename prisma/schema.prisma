datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Account {
  id       String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  username String? @unique
  password String?
  email    String? @unique
  role     Int?    @default(3) // 1: admin, 2: restaurant, 3: customer
  status   Int?    @default(0) // 0: not active, 1: active, 2: locked


  Customer Customer?
  Shop     Shop?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("account")
}

model Customer {
  id        String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  accountId String?   @map("account_id") @db.ObjectId
  fullName  String?   @map("full_name")
  bDate     DateTime? @map("b_date")
  gender    Boolean?  @default(true)
  adress    String?
  phone     String
  avatar    String?

  Account Account? @relation(fields: [accountId], references: [id])
  Bill    Bill[]
  Rate    Rate[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Cart Cart[]
  @@map("customer")
}

model Shop {
  id        String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  accountId String? @map("account_id") @db.ObjectId
  shopName  String? @map("shop_name")
  adress    String?
  phone     String?
  banner    String?
  caption   String?

  Account Account? @relation(fields: [accountId], references: [id])
  Goods   Goods[]
  Bill    Bill[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Cart Cart[]
  @@map("shop")
}

model Goods {
  id        String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  shopId    String? @map("shop_id") @db.ObjectId
  goodsName String? @map("goods_name")
  images    String?
  unit      String?
  buys      Int?
  star      Int?    @default(0)
  caption   String?

  Options    Options[]
  CartDetail CartDetail[]
  BillDetail BillDetail[]
  Shop       Shop?        @relation(fields: [shopId], references: [id])
  Rate       Rate[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("goods")
}

model Options {
  id      String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  goodsId String? @map("goods_id") @db.ObjectId
  option  String?
  price   Int?

  Goods      Goods?       @relation(fields: [goodsId], references: [id])
  CartDetail CartDetail[]
  BillDetail BillDetail[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("options")
}

model Cart {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  customerId String? @map("customer_id") @db.ObjectId
  shopId     String? @map("shop_id") @db.ObjectId

  Customer   Customer?    @relation(fields: [customerId], references: [id])
  Shop       Shop?        @relation(fields: [shopId], references: [id])
  CartDetail CartDetail[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([customerId, shopId])
  @@map("cart")
}

model CartDetail {
  id        String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  cartId    String? @map("cart_id") @db.ObjectId
  goodsId   String? @map("goods_id") @db.ObjectId
  optionsId String? @map("options_id") @db.ObjectId
  amount    Int?

  Goods   Goods?   @relation(fields: [goodsId], references: [id])
  Options Options? @relation(fields: [optionsId], references: [id])
  Cart    Cart?    @relation(fields: [cartId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cart_detail")
}

model Bill {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  customerId String? @map("customer_id") @db.ObjectId
  shopId     String? @map("shop_id") @db.ObjectId
  status     Int? // 0: cancel, 1: done, 2 wait confirm, 3 confirmed, 4 wait delivery
  payment    Int? // 0: cod, 1: momo, 2: zalo pay, ...

  Customer   Customer?    @relation(fields: [customerId], references: [id])
  Shop       Shop?        @relation(fields: [shopId], references: [id])
  BillDetail BillDetail[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("bill")
}

model BillDetail {
  id        String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  billId    String? @map("bill_id") @db.ObjectId
  goodsId   String? @map("goods_id") @db.ObjectId
  optionsId String? @map("options_id") @db.ObjectId
  amount    Int?

  Goods   Goods?   @relation(fields: [goodsId], references: [id])
  Options Options? @relation(fields: [optionsId], references: [id])
  Bill    Bill?    @relation(fields: [billId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("bill_detail")
}

model Rate {
  id         String  @id @default(dbgenerated()) @map("_id") @db.ObjectId
  goodsId    String? @map("goods_id") @db.ObjectId
  customerId String? @map("customer_id") @db.ObjectId
  rate       Int?
  message    String?
  images     String?

  Goods     Goods?    @relation(fields: [goodsId], references: [id])
  Customer  Customer? @relation(fields: [customerId], references: [id])
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@unique([goodsId, customerId])
  @@map("rate")
}
